name: Deploy to Platformatic cloud
on:
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '**.md'

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: "${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}"
  cancel-in-progress: true

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    environment: 
      name: development
    steps:
      - name: Checkout application project repository
        uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4
      - name: npm install --omit=dev
        run: npm install --omit=dev
      - name: Get PR number
        id: get_pull_number
        run: |
          pull_number=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
          echo "pull_number=${pull_number}" >> $GITHUB_OUTPUT
          echo $pull_number
      - uses: neondatabase/create-branch-action@v4
        with:
          project_id: ${{ secrets.NEON_PROJECT_ID }}
          branch_name: pr-${{ steps.get_pull_number.outputs.pull_number }}
          api_key: ${{ secrets.NEON_API_KEY }}
        id: create-branch
      - name: Deploy project
        uses: platformatic/onestep@latest
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          platformatic_workspace_id: ${{ secrets.PLATFORMATIC_DYNAMIC_WORKSPACE_ID }}
          platformatic_workspace_key: ${{ secrets.PLATFORMATIC_DYNAMIC_WORKSPACE_KEY }}
          platformatic_config_path: ./platformatic.db.json
        env:
          PLT_SERVER_LOGGER_LEVEL: info 
          PORT: 3042 
          PLT_SERVER_HOSTNAME: 127.0.0.1 
          PLT_ADMIN_SECRET: ${{ secrets.PLT_ADMIN_SECRET }}
          PLT_LOCK: ${{ vars.PLT_LOCK }}
          PLT_LEADER_POLL: ${{ vars.PLT_LEADER_POLL }}
          DATABASE_URL: ${{ steps.create-branch.outputs.db_url }}
